name: TruffleRuby Dev Builds
on:
  push:
    tags:
    - '*'
  schedule:
  - cron: '0 8 * * *'
jobs:
  prepare:
    name: Check if the latest truffleruby commit is already built
    runs-on: ubuntu-latest
    outputs:
      should_build: ${{ steps.check_commit.outputs.result }}
      commit: ${{ steps.latest_commit.outputs.commit }}
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
      if: github.event_name == 'schedule'

    - name: Clone TruffleRuby
      uses: actions/checkout@v2
      with:
        repository: oracle/truffleruby
        path: truffleruby
    - name: Set latest_commit
      id: latest_commit
      working-directory: truffleruby
      run: echo "::set-output name=commit::$(git rev-parse HEAD)"

    - name: Check if latest commit already built
      uses: actions/github-script@v2
      id: check_commit
      with:
        script: |
          const latestDevCommit = "${{ steps.latest_commit.outputs.commit }}"
          const { owner, repo } = context.repo
          let { data: release } = await github.repos.getLatestRelease({ owner, repo })
          const latestReleaseCommit = release.body.split('@')[1]
          console.log(`Latest Release commit: ${latestReleaseCommit}`)
          console.log(`Latest TruffleRuby commit: ${latestDevCommit}`)
          if (latestReleaseCommit === latestDevCommit) {
            return 'false'
          } else {
            return 'true'
          }
        result-encoding: string

  release:
    name: Create GitHub Release
    needs: [prepare]
    if: needs.prepare.outputs.should_build == 'true'
    runs-on: ubuntu-latest
    outputs:
      release_id: ${{ steps.create_release.outputs.id }}
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
      if: github.event_name == 'schedule'

    - name: Set tag name
      id: tag_name
      run: |
        if [[ "${{ github.event_name }}" == "schedule" ]]; then
          tag=v$(date +%Y%m%d.%H%M%S)
        else
          tag=$(basename "${{ github.ref }}")
        fi
        echo "::set-output name=tag::$tag"
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.tag_name.outputs.tag }}
        release_name: ${{ steps.tag_name.outputs.tag }}
        draft: true
        prerelease: false
        body: oracle/truffleruby@${{ needs.prepare.outputs.commit }}

  build:
    needs: [prepare, release]
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-18.04, ubuntu-20.04, ubuntu-22.04, macos-10.15 ]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Set platform
      id: platform
      run: |
        platform=${{ matrix.os }}
        platform=${platform/macos-*/macos-latest}
        echo "platform=${platform}" >> $GITHUB_OUTPUT

    - name: Setup system ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 2.6
    - name: Setup system python
      uses: actions/setup-python@v3
      with:
        python-version: 3.8
    - run: echo "SDKROOT=$(xcrun --show-sdk-path)" >> $GITHUB_ENV
      if: startsWith(matrix.os, 'macos')

    - name: Clone TruffleRuby
      uses: actions/checkout@v2
      with:
        repository: oracle/truffleruby
        ref: ${{ needs.prepare.outputs.commit }}
    - name: Install JVMCI
      run: |
        tool/jt.rb install jvmci
        echo "JAVA_HOME=$(tool/jt.rb install jvmci)" >> $GITHUB_ENV
    - name: Install mx
      run: tool/jt.rb mx --version
    - name: Clone Graal
      uses: actions/checkout@v2
      with:
        repository: oracle/graal
        path: graal
        fetch-depth: 0
    - run: mv graal ..
    - run: tool/jt.rb mx sforceimports

    # We build everything except native images first,
    # so that we minimize the memory used by mx, etc when building native images.
    - name: Build jars
      run: tool/jt.rb build --env native --native-images=none
    - run: free -m
      if: startsWith(matrix.os, 'ubuntu-')
    - name: Build native images
      run: tool/jt.rb build --env native

    - run: mkdir -p ~/.rubies
    - run: mv $(tool/jt.rb mx --env native standalone-home ruby) ~/.rubies/truffleruby-head
    - name: Create archive
      run: tar czf truffleruby-head-${{ steps.platform.outputs.platform }}.tar.gz -C ~/.rubies truffleruby-head

    - name: Basic test
      run: ~/.rubies/truffleruby-head/bin/ruby --version
    - name: OpenSSL test
      run: ~/.rubies/truffleruby-head/bin/ruby -ropen-uri -e 'puts URI.send(:open, %{https://rubygems.org/}) { |f| f.read(1024) }'

    - name: Upload Built Ruby
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.release.outputs.upload_url }}
        asset_path: truffleruby-head-${{ steps.platform.outputs.platform }}.tar.gz
        asset_name: truffleruby-head-${{ steps.platform.outputs.platform }}.tar.gz
        asset_content_type: application/gzip

  publish:
    name: Publish Release
    needs: [release, build]
    runs-on: ubuntu-latest
    steps:
    - uses: eregon/publish-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        release_id: ${{ needs.release.outputs.release_id }}
    - uses: eregon/keep-last-n-releases@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        n: 7
        remove_tags_without_release: true
